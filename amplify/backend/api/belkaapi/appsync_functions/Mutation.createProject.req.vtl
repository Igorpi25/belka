## [Start] Setting "version" to 1. **
$util.qr($ctx.stash.input.put("version", 1))
## [End] Setting "version" to 1. **

## Set Spec id
$util.qr($ctx.stash.input.put("projectSpecId", $ctx.stash.specId))

## [Start] Prepare DynamoDB PutItem Request. **
$util.qr($context.stash.input.put("status", $util.defaultIfNullOrBlank($ctx.stash.input.status, "IN_PROGRESS")))
$util.qr($context.stash.input.put("systemState", "CREATED"))
$util.qr($context.stash.input.put("createdAt", $util.defaultIfNull($ctx.stash.input.createdAt, $util.time.nowISO8601())))
$util.qr($context.stash.input.put("updatedAt", $util.defaultIfNull($ctx.stash.input.updatedAt, $util.time.nowISO8601())))
$util.qr($context.stash.input.put("__typename", "Project"))
{
  "version": "2018-05-29",
  "operation": "PutItem",
  "key": #if( $modelObjectKey ) $util.toJson($modelObjectKey) #else {
  "id":   $util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.stash.input.id, $util.autoId()))
} #end,
  "attributeValues": $util.dynamodb.toMapValuesJson($context.stash.input),
  "condition": {
      "expression": "attribute_not_exists(#id)",
      "expressionNames": {
          "#id": "id"
    }
  }
}
## [End] Prepare DynamoDB PutItem Request. **