## By default in a before template, all you need is a valid JSON payload.
## You can also stash data to be made available to the functions in the pipeline.
## Examples: 
## - $ctx.stash.put("email", $ctx.args.email)
## - $ctx.stash.put("badgeNumber", $ctx.args.input.badgeNumber)
## - $ctx.stash.put("username", $ctx.identity.username)

$util.qr($ctx.stash.put("updateProductInput", $ctx.args.input))
$util.qr($ctx.stash.put("productId", $ctx.args.input.id))

## No Static Group Authorization Rules **


## No Dynamic Group Authorization Rules **


## [Start] Owner Authorization Checks **
#set( $isOwnerAuthorized = false )
## Authorization rule: { allow: owner, ownerField: "owner", identityClaim: "cognito:username" } **
#set( $allowedOwners0 = $util.defaultIfNull($ctx.args.input.owner, null) )
#set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
#if( $util.isList($allowedOwners0) )
  #foreach( $allowedOwner in $allowedOwners0 )
    #if( $allowedOwner == $identityValue )
      #set( $isOwnerAuthorized = true )
    #end
  #end
#end
#if( $util.isString($allowedOwners0) )
  #if( $allowedOwners0 == $identityValue )
    #set( $isOwnerAuthorized = true )
  #end
#end
#if( $util.isNull($allowedOwners0) && (! $ctx.args.input.containsKey("owner")) )
  $util.qr($ctx.stash.updateProductInput.put("owner", $identityValue))
  #set( $isOwnerAuthorized = true )
#end
## Authorization rule: { allow: owner, ownerField: "team", identityClaim: "cognito:username" } **
#set( $allowedOwners1 = $util.defaultIfNull($ctx.args.input.team, null) )
#set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
#if( $util.isList($allowedOwners1) )
  #foreach( $allowedOwner in $allowedOwners1 )
    #if( $allowedOwner == $identityValue )
      #set( $isOwnerAuthorized = true )
    #end
  #end
#end
#if( $util.isString($allowedOwners1) )
  #if( $allowedOwners1 == $identityValue )
    #set( $isOwnerAuthorized = true )
  #end
#end
#if( $util.isNull($allowedOwners1) && (! $ctx.args.input.containsKey("team")) )
  $util.qr($ctx.stash.updateProductInput.put("team", ["$identityValue"]))
  #set( $isOwnerAuthorized = true )
#end
## [End] Owner Authorization Checks **


## [Start] Throw if unauthorized **
#if( !($isStaticGroupAuthorized == true || $isDynamicGroupAuthorized == true || $isOwnerAuthorized == true) )
  $util.unauthorized()
#end
## [End] Throw if unauthorized **

{}